{
    "swagger": "2.0",
    "info": {
      "description": "This API will be called by ETA Service/Shipment Engine to check the serviceability by any mapped 3PL provider, given the source and destination postal codes. This API accepts few other params as well to allow further drill down the 3PL providers who can also fulfil these needs e.g. cod etc.",
      "title": "TPLEngineServiceability",
      "termsOfService": "http://swagger.io/terms/",
      "contact": {
        "name": "Ankur",
        "email": "ankur.pandey1@bigbasket.com"
      },
      "version": "1.0"
    },
    "host": "qa-svc.bigbasket.com",
    "paths": {
      "/tpl-serviceability/internal/v1/serviceabilities": {
        "post": {
          "description": "To check the serviceability by any mapped 3PL provider,",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "tags": [
            "Serviceability"
          ],
          "summary": "To check the serviceability by any mapped 3PL provider,",
          "parameters": [
            {
              "name": "X-Tenant-Id",
              "in": "header",
              "required": true,
              "type": "number",
              "value": 2
            },
            {
              "name": "X-Entry-Context-Id",
              "in": "header",
              "required": true,
              "type": "number",
              "value": 2
            },
            {
              "name": "X-Entry-Context",
              "in": "header",
              "required": true,
              "type": "string",
              "value": "tatacroma-online"
            },
            {
              "name": "X-Caller",
              "in": "header",
              "required": true,
              "type": "string",
              "value": "hertz"
            },
            {
              "name": "X-Tracker",
              "in": "header",
              "required": true,
              "type": "string",
              "value": "06973e47-df9d-42ce-80d9-8428020866ef"
            },
            {
              "name": "X-Project",
              "in": "header",
              "required": true,
              "type": "string",
              "value": "bbnow-3pl/bb-3pl"
            },
            {
              "description": "Get Serviceability",
              "name": "payload",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/ServiceabilityRequestBody"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "schema": {
                "$ref": "#/components/schemas/ServiceabilityResponseBody"
              }
            },
            "400": {
              "description": "Request Validation",
              "schema": {
                "$ref": "#/components/schemas/ServiceabilityErrorResponse_1"
              }
            },
            "404": {
              "description": "NO 3PL partners to serve the request",
              "schema": {
                "$ref": "#/components/schemas/ServiceabilityErrorResponse"
              }
            },
            "500": {
              "description": "System Errors",
              "schema": {
                "type": "object",
                "properties": {
                  "Database Error": {
                    "$ref": "#/components/schemas/ServiceabilityDatabaseErrorResponse"
                  },
                  "System Error": {
                    "$ref": "#/components/schemas/ServiceabilitySystemErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/tpl-serviceability/external/v1/eligible-riders": {
        "post": {
          "description": "TPL will invoke this API to share the Ids of CEEs who are in the geofence of a store.,",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "tags": [
            "Geofence"
          ],
          "summary": "TPL will invoke this API to share the Ids of CEEs who are in the geofence of a store.",
          "parameters": [
            {
              "name": "X-Tenant-Id",
              "in": "header",
              "required": true,
              "type": "number",
              "value": 2
            },
            {
              "name": "X-Courier-Id",
              "in": "header",
              "required": true,
              "type": "integer",
              "value": 101
            },
            {
              "name": "X-Caller",
              "in": "header",
              "required": true,
              "type": "string",
              "value": "hertz"
            },
            {
              "name": "X-Tracker",
              "in": "header",
              "required": true,
              "type": "string",
              "value": "06973e47-df9d-42ce-80d9-8428020866ef"
            },
            {
              "name": "X-Project",
              "in": "header",
              "required": true,
              "type": "string",
              "value": "bbnow-3pl"
            },
            {
              "description": "Request Body (CEEs in geofence - candidate for EQ and AL)",
              "name": "payload",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/EligibleRidersRequestBody"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "schema": {
                "$ref": "#/components/schemas/SuccessResponse"
              }
            },
            "400": {
              "description": "Request Validation",
              "schema": {
                "$ref": "#/components/schemas/CEEValidationError"
              }
            },
            "404": {
              "description": "Store to Courier mapping not enabled",
              "schema": {
                "$ref": "#/components/schemas/CeeErrorResponse_2"
              }
            },
            "500": {
              "description": "Failed-retry",
              "schema": {
                "$ref": "#/components/schemas/CeeErrorResponse_1"
              }
            }
          }
        }
      },
      "/tpl-serviceability/internal/v1/couriers/{courier_id}/mappings/store_enablement/{store_queue_id}": {
        "get": {
          "description": "This API can be used to get a store enablement mapping for a courier partner and the store.",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "tags": [
            "Geofence"
          ],
          "summary": "This API can be used to get a store enablement mapping for a courier partner and the store.",
          "parameters": [
            {
              "name": "X-Tenant-Id",
              "in": "header",
              "required": true,
              "type": "number",
              "value": 2
            },
            {
              "name": "X-Entry-Context-Id",
              "in": "header",
              "required": true,
              "type": "integer",
              "value": 102
            },
            {
              "name": "X-Caller",
              "in": "header",
              "required": true,
              "type": "string",
              "value": "hertz"
            },
            {
              "name": "X-Tracker",
              "in": "header",
              "required": true,
              "type": "string",
              "value": "06973e47-df9d-42ce-80d9-8428020866ef"
            },
            {
              "name": "X-Project",
              "in": "header",
              "required": true,
              "type": "string",
              "value": "bbnow-3pl"
            },
            {
              "name": "courier_id",
              "in": "path",
              "required": true,
              "type": "integer",
              "value": 101
            },
            {
              "name": "store_queue_id",
              "in": "path",
              "required": true,
              "type": "string",
              "value": "101"
            },
            {
              "name": "dm_id",
              "in": "query",
              "required": false,
              "type": "integer",
              "value": 1
            },
            {
              "name": "page_no",
              "in": "query",
              "required": false,
              "type": "integer",
              "value": 1
            },
            {
              "name": "page_size",
              "in": "query",
              "required": false,
              "type": "integer",
              "value": 1
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "schema": {
                "$ref": "#/components/schemas/PartnerCourierMappingResponseBody"
              }
            },
            "400": {
              "description": "Request Validation",
              "schema": {
                "$ref": "#/components/schemas/PartnerCourierMappingValidationError"
              }
            },
            "404": {
              "description": "Store to Courier mapping not enabled",
              "schema": {
                "$ref": "#/components/schemas/CeeErrorResponse_2"
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "ServiceabilityErrorResponse": {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ServiceabilityErrorResponse_error"
              }
            }
          }
        },
        "ServiceabilityRequestBody": {
          "required": [
            "pincode"
          ],
          "properties": {
            "respond_with_edd": {
              "type": "boolean",
              "example": true
            },
            "all_courier_options": {
              "type": "boolean",
              "example": false
            },
            "shipments": {
              "type": "array",
              "items": {
                "properties": {
                  "exclude_courier_partner_ids": {
                    "type": "array",
                    "example": [
                      100,
                      103
                    ]
                  },
                  "source_pincode": {
                    "type": "string",
                    "required": true,
                    "example": "400053"
                  },
                  "destination_pincode": {
                    "type": "string",
                    "required": true,
                    "example": "411040"
                  },
                  "fc_id": {
                    "type": "number",
                    "required": true,
                    "example": 1
                  },
                  "cod": {
                    "type": "integer",
                    "example": 0
                  },
                  "is_hazardous": {
                    "type": "integer",
                    "example": 0
                  },
                  "weight_gms": {
                    "type": "integer",
                    "required": true,
                    "example": 2000
                  },
                  "length_mms": {
                    "type": "integer",
                    "example": 50
                  },
                  "breadth_mms": {
                    "type": "integer",
                    "example": 20
                  },
                  "height_mms": {
                    "type": "integer",
                    "example": 20
                  },
                  "service_type": {
                    "type": "string",
                    "example": "Surface"
                  },
                  "order_type": {
                    "type": "string",
                    "example": "Normal"
                  },
                  "offset_mins": {
                    "type": "integer",
                    "example": 100
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ItemDetails"
                    }
                  }
                }
              }
            }
          }
        },
        "ItemDetails": {
          "properties": {
            "sku": {
              "type": "integer",
              "example": 10
            },
            "weight_gms": {
              "type": "integer",
              "example": 1000
            },
            "length_mms": {
              "type": "integer",
              "example": 10
            },
            "breadth_mms": {
              "type": "integer",
              "example": 10
            },
            "height_mms": {
              "type": "integer",
              "example": 10
            },
            "unit_count": {
              "type": "integer",
              "example": 1
            }
          }
        },
        "ServiceabilityResponseBody": {
          "type": "array",
          "items": {
            "properties": {
              "available_courier_companies": {
                "type": "array",
                "items": {
                  "properties": {
                    "source_pincode": {
                      "type": "string",
                      "example": "455011"
                    },
                    "destination_pincode": {
                      "type": "string",
                      "example": "455011"
                    },
                    "courier_partner_id": {
                      "type": "integer",
                      "example": 101
                    },
                    "courier_partner_name": {
                      "type": "string",
                      "example": "Delhivery"
                    },
                    "courier_service_id": {
                      "type": "integer",
                      "example": 2
                    },
                    "courier_service_name": {
                      "type": "string",
                      "example": "Surface"
                    },
                    "cod": {
                      "type": "integer",
                      "example": 0
                    },
                    "min_weight_gms": {
                      "type": "integer",
                      "example": 0.5
                    },
                    "max_weight_gms": {
                      "type": "integer",
                      "example": 3
                    },
                    "is_hazardous_allowed": {
                      "type": "integer",
                      "example": 0
                    },
                    "cutoff_datetime": {
                      "type": "string",
                      "example": "2023-01-24 11:00"
                    },
                    "pickup_date": {
                      "type": "string",
                      "example": "2023-01-24"
                    },
                    "estimated_delivery_date": {
                      "type": "string",
                      "example": "2023-01-28"
                    },
                    "description": {
                      "type": "string",
                      "example": ""
                    },
                    "priority": {
                      "type": "integer",
                      "example": 2
                    },
                    "route_sort_code": {
                      "type": "string",
                      "example": ""
                    },
                    "weight_gms": {
                      "type": "integer",
                      "example": 3000
                    }
                  }
                }
              }
            }
          }
        },
        "ServiceabilityErrorResponse_error": {
          "properties": {
            "code": {
              "type": "number",
              "example": 3010
            },
            "code_str": {
              "type": "string",
              "example": "TPL3010"
            },
            "details": {
              "type": "object",
              "properties": {
                "message": {
                  "example": "No 3PL partner to fulfill the criteria"
                }
              }
            },
            "type": {
              "type": "string",
              "example": "SERVICEABILITY_ERROR"
            },
            "trace_id": {
              "type": "string",
              "example": ""
            }
          }
        },
        "ServiceabilityErrorResponse_1": {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ValidationError"
              }
            }
          }
        },
        "ServiceabilityDatabaseErrorResponse": {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "properties": {
                  "code": {
                    "type": "number",
                    "example": 3005
                  },
                  "code_str": {
                    "type": "string",
                    "example": "TPL3005"
                  },
                  "details": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "example": "MySQL server down. Please check connection"
                      }
                    }
                  },
                  "type": {
                    "type": "string",
                    "example": "DATABASE_ERR"
                  },
                  "display_message": {
                    "type": "string",
                    "example": "Sorry! Something went wrong!"
                  },
                  "trace_id": {
                    "type": "string",
                    "example": ""
                  }
                }
              }
            }
          }
        },
        "ServiceabilitySystemErrorResponse": {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "properties": {
                  "code": {
                    "type": "number",
                    "example": 3003
                  },
                  "code_str": {
                    "type": "string",
                    "example": "TPL3003"
                  },
                  "details": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "example": ""
                      }
                    }
                  },
                  "type": {
                    "type": "string",
                    "example": "SYSTEM_ERR"
                  },
                  "display_message": {
                    "type": "string",
                    "example": "Sorry! Something went wrong!"
                  },
                  "trace_id": {
                    "type": "string",
                    "example": ""
                  }
                }
              }
            }
          }
        },
        "ValidationError": {
          "properties": {
            "code": {
              "type": "number",
              "example": 3001
            },
            "code_str": {
              "type": "string",
              "example": "VALIDATION_ERR"
            },
            "details": {
              "type": "array",
              "example": [
                {
                  "message": "source_pincode is required"
                }
              ]
            },
            "type": {
              "type": "string",
              "example": "VALIDATION_ERR"
            },
            "trace_id": {
              "type": "string",
              "example": ""
            }
          }
        },
        "EligibleRidersRequestBody": {
          "properties": {
            "store_queue_id": {
              "type": "string",
              "example": 10
            },
            "dm_id": {
              "type": "integer",
              "example": 2
            },
            "rider_id": {
              "type": "array",
              "example": [
                "100",
                "101"
              ]
            }
          }
        },
        "SuccessResponse": {
          "properties": {
            "success": {
              "type": "boolean",
              "example": true
            }
          }
        },
        "CEEValidationError": {
          "properties": {
            "code": {
              "type": "string",
              "example": "TPL3001"
            },
            "code_str": {
              "type": "string",
              "example": "VALIDATION_ERR"
            },
            "detail": {
              "type": "array",
              "example": [
                {
                  "message": "store_queue_id is required",
                  "path": "store_queue_id"
                },
                {
                  "message": "rider_id is required",
                  "path": "cee_id"
                }
              ]
            },
            "type": {
              "type": "string",
              "example": "VALIDATION_ERR"
            },
            "display_message": {
              "type": "string",
              "example": "Sorry! Something went wrong!"
            },
            "trace_id": {
              "type": "string",
              "example": ""
            }
          }
        },
        "CeeErrorResponse_cannot_process_error": {
          "properties": {
            "code": {
              "type": "integer",
              "example": 3011
            },
            "code_str": {
              "type": "string",
              "example": "TPL3011"
            },
            "detail": {
              "type": "array",
              "example": [
                {
                  "message": "Could not process the request"
                }
              ]
            },
            "type": {
              "type": "string",
              "example": "CANNOT_PROCESS_ERROR"
            },
            "display_message": {
              "type": "string",
              "example": "Sorry! Something went wrong!"
            },
            "trace_id": {
              "type": "string",
              "example": ""
            }
          }
        },
        "CeeErrorResponse_1": {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CeeErrorResponse_cannot_process_error"
              }
            }
          }
        },
        "CeeErrorResponse_not_found_error": {
          "properties": {
            "code": {
              "type": "integer",
              "example": 3003
            },
            "code_str": {
              "type": "string",
              "example": "TPL3003"
            },
            "detail": {
              "type": "array",
              "example": [
                {
                  "message": "mapping not found"
                }
              ]
            },
            "type": {
              "type": "string",
              "example": "NOT_FOUND"
            },
            "display_message": {
              "type": "string",
              "example": "Sorry! Something went wrong!"
            },
            "trace_id": {
              "type": "string",
              "example": ""
            }
          }
        },
        "CeeErrorResponse_2": {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CeeErrorResponse_not_found_error"
              }
            }
          }
        },
        "PartnerCourierMappingResponseBody": {
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "properties": {
                  "courier": {
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 200
                      },
                      "name": {
                        "type": "string",
                        "example": "ShadowFax"
                      },
                      "slug": {
                        "type": "string",
                        "example": "ShadowFax"
                      }
                    }
                  },
                  "store_queue_id": {
                    "type": "string",
                    "example": "1"
                  },
                  "dm_id": {
                    "type": "integer",
                    "example": 2
                  },
                  "is_enabled": {
                    "type": "boolean",
                    "example": true
                  },
                  "created_by": {
                    "type": "string",
                    "example": "admin@admin.com"
                  },
                  "updated_by": {
                    "type": "string",
                    "example": "admin@admin.com"
                  },
                  "created_at": {
                    "type": "string",
                    "example": "2022-04-13 11:11"
                  },
                  "updated_at": {
                    "type": "string",
                    "example": "2022-04-13 11:11"
                  }
                }
              }
            },
            "meta": {
              "properties": {
                "total_count": {
                  "type": "integer",
                  "example": 100
                },
                "page_size": {
                  "type": "integer",
                  "example": 1
                },
                "page_no": {
                  "type": "integer",
                  "example": 1
                }
              }
            }
          }
        },
        "PartnerCourierMappingValidationError": {
          "properties": {
            "code": {
              "type": "string",
              "example": "TPL3001"
            },
            "code_str": {
              "type": "string",
              "example": "VALIDATION_ERR"
            },
            "detail": {
              "type": "array",
              "example": [
                {
                  "message": "\"page_no\" must be a number",
                  "path": "page_no"
                },
                {
                  "message": "\"page_size\" must be a number",
                  "path": "page_size"
                }
              ]
            },
            "type": {
              "type": "string",
              "example": "VALIDATION_ERR"
            },
            "trace_id": {
              "type": "string",
              "example": ""
            }
          }
        }
      }
    }
  }